---
layout:   post
title:    "The Site Looks Different..."
keywords: andydevs blog webdesign
---

- Intro
    - Old UI
        - Kinda sucked
        - It's not that it was ugly
        - It was boring
        - Decided to start a new UI
        - Create a style library
        - Then port it over to my website
    - Concept of new UI
        - Description
            - Two panels
            - Menu panel appears recessed
            - Dark color
            - Appears on the side on desktop
            - Appears behind front panel on mobile
            - There's a button that slides the front panel out and in
        - Rough drawing after the face
- Code samples
    - Back
        - Fixed positioning
        - z-index to background
    - Front
        - Absolute positioning
            - First fixed positioning with scroll wheel
                - `-webkit-overflow-scrolling`
            - This doesn't fit with mobile scrolling
                - Doesn't make the web ui change with scrolling
        - z-index to foreground
    - Mobile Styling
        - Change width and height of back and front
        - `<meta name="viewport" content="width=device-width,initial-scale=1">`
        - Make button appear
        - Handle sliding using jQuery
    - Cutouts
        - Inspired by back panel.
        - The idea is parts of the front are cut out from the back pane
- Challenges Faced
    - Sliding UI
        - Sliding UI causes window to expand. Can't seem to hide it effectively
    - Floating Button
        - I had a shadow on the button, meant for the front. But the shadow clashes with the cutouts.
    - Forms not aligning properly
        - The input fields were too big on mobile.
- Solutions and Compromises
    - Two fixed buttons at top instead of floating button
        - Got rid of the floating button entirely...
        - In place, we have two buttons at the top that stay in a place where the shadows can't clash. The two carets at the top
    - Setting margin
        - The front will just collapse using margin-left. That's what we're gonna do
    - How flexbox actually works
        - `flex: 1` sets the flex-basis, which is the required length of the element. What we need is `flex: 1 auto`. This tells the element to grow to be 1 fractional length, but shrink as needed.
- Porting design over to my website
    - Adding the sass/js
        - Just copied over the files
        - Javascript file needed to be in /assets folder
            - Just yanked that from the other library
    - Making new layouts
    - Updating syntax highlighting
        - Wanted every part to be in relation to the back color, so that the style is customizable, but still fits with the two tone design.
    - Creating the theme gem
- Future
    - Getting an actual slide animation working
    - React components.
    - Touch gestures!